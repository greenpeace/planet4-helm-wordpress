---
# Default values for wordpress.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

environment: production

hostname: k8s.p4.greenpeace.org
hostpath: ""

hostnameProduction: master.k8s.p4.greenpeace.org
hostpathProduction: ""

wp:
  authKey: ""
  authSalt: ""
  loggedInKey: ""
  loggedInSalt: ""
  nonceKey: ""
  nonceSalt: ""
  redis:
    enabled: true
  secureAuthKey: ""
  secureAuthSalt: ""
  setOptionsOnBoot: false
  siteHome: ""
  siteUrl: k8s.p4.greenpeace.org
  stateless:
    enabled: true
    mode: stateless
    # Pass in from environment
    bucket:
    serviceAccountKey:

dbUsername: testing
# Pass in from environment
# dbPassword: testing
dbDatabase: wordpress_db

php:
  enabled: true
  persistence:
    enabled: false
    class: nfs
  process:
    manager: dynamic
    maxChildren: 50
    start: 5
    minSpare: 3
    maxSpare: 5
    maxRequests: 1000
  image:
    repository: gcr.io/planet-4-151612/planet4-base-app
    tag: latest
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 9000
  memoryLimit: 384M
  healthProbes:
    enabled: true
    livenessDelay: 10
    livenessPeriod: 10
    readinessDelay: 10
    readinessPeriod: 10
  minReplicaCount: 2
  maxReplicaCount: 5
  targetCPUUtilizationPercentage: 500 # Scale up when pod uses 1 core
  resources:
    requests:
      memory: "512Mi"
      cpu: "200m" # * targetCPUUtilizationPercentage. 200m * 500 = 1 CPU
    limits:
      memory: "1Gi"
      cpu: "2"

openresty:
  image:
    repository: gcr.io/planet-4-151612/planet4-base-openresty
    tag: latest
    pullPolicy: IfNotPresent
  fastcgi:
    redis: true
  service:
    type: ClusterIP
    port: 80
  geoip: false # Should increase readinessDelay if geoip is enabled to allow time for DB to load
  healthProbes:
    enabled: true
    livenessDelay: 10
    livenessPeriod: 10
    readinessDelay: 10
    readinessPeriod: 10
  minReplicaCount: 2
  maxReplicaCount: 5
  targetCPUUtilizationPercentage: 1000 # Scale up when pod uses .5 cores
  resources:
    requests:
      memory: "64Mi"
      cpu: "50m" # * targetCPUUtilizationPercentage. 50m * 1000% = .5 CPU
    limits:
      memory: "256Mi"
      cpu: "1"

smtp:
  host: "smtp-out.greenpeace.org:587"

newrelic:
  enabled: true
  appname: Planet 4 Wordpress
  # license:
  # apiKey:

recharge:
  enabled: false
  image: gcr.io/planet-4-151612/p4-nro-recharge
  tag: v0.0.8

redis:
  cluster:
    enabled: false
    slaveCount: 3
  usePassword: false
  persistence:
    enabled: false
  # Disabled as Helm chart does not work when configmap defined
  # https://github.com/helm/charts/issues/7770
  # configmap: |-
  #   maxmemory 200mb
  #   maxmemory-policy volatile-lfu
  master:
    persistence:
      enabled: false
    disableCommands: ""
    resources:
      requests:
        memory: 64Mi
        cpu: 10m
      # Disabled until redis maxmemory is able to be defined in config
      # limits:
      #   memory: 512Mi
      #   cpu: 150m
  slave:
    persistence:
      enabled: false
    disableCommands: ""
    resources:
      requests:
        memory: 64Mi
        cpu: 10m
      # Disabled until redis maxmemory is able to be defined in config
      # limits:
      #   memory: 512Mi
      #   cpu: 150m

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: traefik
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

ingressProduction:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: traefik
  tls: []

fastcgi:
  backend: false
  redis:
    enabled: true

pagespeed:
  redis:
    enabled: false
  enabled: false

sqlproxy:
  enabled: true
  resources:
    requests:
      cpu: 10m
      memory: 64Mi
    limits:
      memory: 150Mi
      cpu: 150m
  cloudsql:
    instances:
      #- instance: db-instance-name
      #  project: gcp-project
      #  region: us-central1
      #  port: 3306


resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

nodeSelector: {}

tolerations: []
